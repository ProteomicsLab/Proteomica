import ij.IJ;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Image;
import java.awt.Insets;
import java.awt.Rectangle;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.Transparency;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JWindow;
import javax.swing.SwingUtilities;

public class WelcomeSplash extends JWindow {
  private int duration;
  private GridBagLayout layout = new GridBagLayout();
  private GridBagConstraints constraint = new GridBagConstraints();

  public WelcomeSplash(int d) {
    duration = d;
  }

  // A simple little method to show a title screen in the center
  // of the screen for the amount of time given in the constructor
  public void showSplash() {
    JPanel content = (JPanel) getContentPane();
    content.setBackground(Color.LIGHT_GRAY);
    content.setOpaque(true);
/*    JWindow jw = new JWindow();
    jw.setBackground(Color.blue);
*/    
    // Set the window's bounds, centering the window
    int height = 300;
    int width = 450;
    Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
    int x = (screen.width - width) / 2;
    int y = (screen.height - height) / 2;
    setBounds(x, y, width, height);

    // Build the splash screen
/*	File file = new File("batman.png");
	String strSplashPath = file.getAbsolutePath();
    JLabel label = new JLabel(new ImageIcon(strSplashPath));
*/    
    JLabel softTitile = new JLabel("Proteomica...",JLabel.CENTER);
    JLabel tagTiltle = new JLabel("Demystfying Proteins", JLabel.CENTER);
    softTitile.setFont(new Font("Sans-Serif", Font.BOLD, 36));
    tagTiltle.setFont(new Font("Sans-Serif", Font.BOLD, 21));
//    JLabel label = new JLabel("Proteomica IIT Bombay");
    JLabel copyrt = new JLabel("Copyright 2013, Proteomics Lab, IIT Bombay", JLabel.CENTER);
    copyrt.setFont(new Font("Sans-Serif", Font.BOLD, 12));
    
    content.add(softTitile, BorderLayout.CENTER);
    content.add(tagTiltle, BorderLayout.PAGE_START);
    //content.add(label, BorderLayout.CENTER);
    content.add(copyrt, BorderLayout.PAGE_END);
    Color oraRed = new Color(156, 20, 20, 255);
 //   content.setBorder(BorderFactory.createLineBorder(oraRed, 1));
/*	jw.add(softTitile);
	jw.add(tagTiltle);
	jw.add(copyrt);
*/	
//	jw.setVisible(true);
    
    // Display it
    content.revalidate();
    content.repaint();
    setVisible(true);

    
    // Wait a little while, maybe while loading resources
    try {
      Thread.sleep(duration);
    } catch (Exception e) {
    }

    setVisible(false);
  }
  
  public void updateBackground( ) {
	  Image background; 
	  try {
	        Robot rbt = new Robot( );
	        Toolkit tk = Toolkit.getDefaultToolkit( );
	        Dimension dim = tk.getScreenSize( );
	        background = rbt.createScreenCapture(
	        new Rectangle(0,0,(int)dim.getWidth( ),
	                          (int)dim.getHeight( )));
	    } catch (Exception ex) {
	        ex.printStackTrace( );
	    }
	}

  private void addComponent(JPanel pn, int row, int col, int width, int height, int space, JComponent comp)
  { 
    this.constraint.gridx = col;
    this.constraint.gridy = row;
    this.constraint.gridwidth = width;
    this.constraint.gridheight = height;
    this.constraint.anchor = 18;
    this.constraint.insets = new Insets(space, space, space, space);
    this.constraint.weightx = (IJ.isMacintosh() ? 90.0D : 100.0D);
    this.constraint.fill = 2;
    this.layout.setConstraints(comp, this.constraint);
    pn.add(comp);
  }

  public void showSplashAndExit() {
    showSplash();
    dispose();
  }
  public void horribleFuck(){
      SwingUtilities.invokeLater( new Runnable() {
          public void run() {

          String title = "<html><body style='width: 200px; padding: 5px;'>"
              + "<h1>Proteomica </h1>"
              + "Demystifying proteins...";

              JFrame f = new JFrame("Label Render Test");
              f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

              BufferedImage image = new BufferedImage(
                  400,
                  300,
                  BufferedImage.TYPE_INT_RGB);
              Graphics2D imageGraphics = image.createGraphics();
              GradientPaint gp = new GradientPaint(
                  20f,
                  20f,
                  Color.red,
                  380f,
                  280f,
                  Color.orange);
              imageGraphics.setPaint(gp);
              imageGraphics.fillRect(0, 0, 400, 300);

              JLabel textLabel = new JLabel(title);
              textLabel.setSize(textLabel.getPreferredSize());

              Dimension d = textLabel.getPreferredSize();
              BufferedImage bi = new BufferedImage(
                  d.width,
                  d.height,
                  BufferedImage.TYPE_INT_ARGB);
              Graphics g = bi.createGraphics();
              g.setColor(new Color(255, 255, 255, 128));
              g.fillRoundRect(
                  0,
                  0,
                  bi.getWidth(f),
                  bi.getHeight(f),
                  15,
                  10);
              g.setColor(Color.black);
              textLabel.paint(g);
              Graphics g2 = image.getGraphics();
              g2.drawImage(bi, 20, 20, f);

              ImageIcon ii = new ImageIcon(image);
              JLabel imageLabel = new JLabel(ii);

              f.getContentPane().add(imageLabel);
              f.pack();
              f.setLocationByPlatform(true);

              f.setVisible(true);
          }
      });

  }
  
}